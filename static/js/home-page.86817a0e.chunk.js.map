{"version":3,"sources":["pages/HomePage/HomePage.jsx","services/ApiService/ApiService.jsx","img/no-img.jpg","components/MovieList/MovieList.jsx"],"names":["apiService","ApiService","HomePage","state","trading","isLoading","fetchTrading","setState","getTradingMovies","then","data","catch","e","console","log","message","finally","this","pathname","props","location","items","Component","AUTH_KEY","axios","defaults","baseURL","get","response","results","query","movieId","cast","MovieList","className","map","el","to","id","src","poster_path","img","alt","title"],"mappings":"gNAIMA,EAAa,IAAIC,IACjBC,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,WAAW,G,EAKbC,aAAe,WACb,EAAKC,SAAS,CAAEF,WAAW,IAC3BL,EACGQ,mBACAC,MAAK,SAACC,GACL,EAAKH,SAAS,CAAEH,QAASM,OAE1BC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,YAC3BC,SAAQ,WACP,EAAKT,SAAS,CAAEF,WAAW,Q,uDAZjC,WACEY,KAAKX,iB,oBAcP,WACE,OACE,gCACE,+CACCW,KAAKd,MAAME,WAAa,2CACzB,cAAC,IAAD,CACEa,SAAUD,KAAKE,MAAMC,SAASF,SAC9BG,MAAOJ,KAAKd,MAAMC,iB,GA3BLkB,aAsCRpB,a,qGC1CTqB,EAAW,mCACjBC,IAAMC,SAASC,QAAU,+B,IAEJzB,E,gGACnB,WACE,OAAOuB,IACJG,IADI,qCAC8BJ,IAClCd,MAAK,SAACmB,GAAD,OAAcA,EAASlB,KAAKmB,a,+BAGtC,SAAkBC,GAChB,OAAON,IACJG,IADI,gCACyBJ,EADzB,kBAC2CO,IAC/CrB,MAAK,SAACmB,GAAD,OAAcA,EAASlB,KAAKmB,a,0BAEtC,SAAaE,GACX,OAAOP,IACJG,IADI,iBACUI,EADV,oBAC6BR,IACjCd,MAAK,SAACmB,GAAD,OAAcA,EAASlB,U,6BAEjC,SAAgBqB,GACd,OAAOP,IACJG,IADI,iBACUI,EADV,4BACqCR,IACzCd,MAAK,SAACmB,GAAD,OAAcA,EAASlB,KAAKsB,U,6BAEtC,SAAgBD,GACd,OAAOP,IACJG,IADI,iBACUI,EADV,4BACqCR,IACzCd,MAAK,SAACmB,GAAD,OAAcA,EAASlB,KAAKmB,e,sCC7BzB,QAA0B,oC,gCCAzC,2BA6CeI,IAzCG,SAAC,GAAgC,IAA9BZ,EAA6B,EAA7BA,MAAOS,EAAsB,EAAtBA,MAAOZ,EAAe,EAAfA,SACjC,OACE,oBAAIgB,UAAU,cAAd,SACGb,EAAMc,KAAI,SAACC,GACV,OACE,oBAAIF,UAAU,cAAd,SACE,cAAC,IAAD,CACEA,UAAU,cACVG,GAAI,CACFnB,SAAS,WAAD,OAAakB,EAAGE,IACxBnC,MAAO,CACL2B,QACAZ,aANN,SAUE,sBAAKgB,UAAU,UAAf,UACE,qBACEA,UAAU,aACVK,IACEH,EAAGI,YAAH,0CACuCJ,EAAGI,aACtCC,IAENC,IAAI,KAEN,6BAAKN,EAAGO,cArBmBP,EAAGE","file":"static/js/home-page.86817a0e.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\nimport ApiService from \"../../services/ApiService/ApiService\";\r\nconst apiService = new ApiService();\r\nclass HomePage extends Component {\r\n  state = {\r\n    trading: [],\r\n    isLoading: false,\r\n  };\r\n  componentDidMount() {\r\n    this.fetchTrading();\r\n  }\r\n  fetchTrading = () => {\r\n    this.setState({ isLoading: true });\r\n    apiService\r\n      .getTradingMovies()\r\n      .then((data) => {\r\n        this.setState({ trading: data });\r\n      })\r\n      .catch((e) => console.log(e.message))\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Trading today</h2>\r\n        {this.state.isLoading && <p>Loading...</p>}\r\n        <MovieList\r\n          pathname={this.props.location.pathname}\r\n          items={this.state.trading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHomePage.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n  match: PropTypes.object,\r\n};\r\nexport default HomePage;","import axios from \"axios\";\r\nconst AUTH_KEY = 'a3368b25f03d671fc46c253c64d35f5e';\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nexport default class ApiService {\r\n  getTradingMovies() {\r\n    return axios\r\n      .get(`/trending/all/week?api_key=${AUTH_KEY}`)\r\n      .then((response) => response.data.results);\r\n  }\r\n\r\n  getMoviesOnSearch(query) {\r\n    return axios\r\n      .get(`/search/movie?api_key=${AUTH_KEY}&query=${query}`)\r\n      .then((response) => response.data.results);\r\n  }\r\n  getMovieById(movieId) {\r\n    return axios\r\n      .get(`/movie/${movieId}?api_key=${AUTH_KEY}`)\r\n      .then((response) => response.data);\r\n  }\r\n  getMovieCredits(movieId) {\r\n    return axios\r\n      .get(`/movie/${movieId}/credits?api_key=${AUTH_KEY}`)\r\n      .then((response) => response.data.cast);\r\n  }\r\n  getMovieReviews(movieId) {\r\n    return axios\r\n      .get(`/movie/${movieId}/reviews?api_key=${AUTH_KEY}`)\r\n      .then((response) => response.data.results);\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/no-img.86c1af37.jpg\";","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport img from \"../../img/no-img.jpg\";\r\n\r\nconst MovieList = ({ items, query, pathname }) => {\r\n  return (\r\n    <ul className=\"previewList\">\r\n      {items.map((el) => {\r\n        return (\r\n          <li className=\"previewItem\" key={el.id}>\r\n            <Link\r\n              className=\"previewLink\"\r\n              to={{\r\n                pathname: `/movies/${el.id}`,\r\n                state: {\r\n                  query,\r\n                  pathname,\r\n                },\r\n              }}\r\n            >\r\n              <div className=\"wrapper\">\r\n                <img\r\n                  className=\"previewImg\"\r\n                  src={\r\n                    el.poster_path\r\n                      ? `https://image.tmdb.org/t/p/w500/${el.poster_path}`\r\n                      : img\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <h3>{el.title}</h3>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  items: PropTypes.array,\r\n  query: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n};\r\nexport default MovieList;"],"sourceRoot":""}